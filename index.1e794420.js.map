{"mappings":"ACKA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAa,SAAS,aAAa,CAAC,eACpC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,EAAU,gBAAgB,CAAC,QAAS,WAClC,EAAM,MAAM,CAAC,EAAM,gBAAgB,CAAC,SAAS,CAAC,CAAA,IAV/B,KAYX,EAAM,QAAQ,CAAC,MAAM,EACvB,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAII,EAAM,QAAQ,CAAC,MAAM,CAfV,GAgBb,CAAA,EAAW,QAAQ,CAAG,CAAA,CADxB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAChC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,EAAM,QAAQ,CAAA,OAAA,QAAA,CAAA,GAA1B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAG,MAAM,CAAC,EAAG,gBAAgB,CAAC,SAAS,CAAC,CAAA,G,C,C,M,E,CADrC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,IAAM,EAAc,EAAM,gBAAgB,CAAC,QAAQ,CAAC,MAAM,AA1B3C,CAAA,KA4BX,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAII,EA/BW,GAgCb,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAW,gBAAgB,CAAC,QAAS,WACnC,EAAM,WAAW,CAAC,EAAM,gBAAgB,EArCzB,IAuCX,EAAM,QAAQ,CAAC,MAAM,EACvB,CAAA,EAAW,QAAQ,CAAG,CAAA,CADxB,EAII,EAAM,QAAQ,CAAC,MAAM,CA3CV,GA4Cb,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAChC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,EAAM,QAAQ,CAAA,OAAA,QAAA,CAAA,GAA1B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAG,WAAW,CAAC,EAAG,gBAAgB,C,C,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,IAAM,EAAc,EAAM,gBAAgB,CAAC,QAAQ,CAAC,MAAM,AArD3C,CAAA,IAuDX,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAII,EA3DW,GA4Db,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar maxCells = 10;\nvar minCells = 2;\nvar table = document.querySelector(\"tbody\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removedRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nappendRow.addEventListener(\"click\", function() {\n    table.append(table.lastElementChild.cloneNode(true));\n    if (table.children.length === maxCells) appendRow.disabled = true;\n    if (table.children.length > minCells) removedRow.disabled = false;\n});\nappendColumn.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var tr = _step.value;\n            tr.append(tr.lastElementChild.cloneNode(true));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var columnCount = table.lastElementChild.children.length;\n    if (columnCount === maxCells) appendColumn.disabled = true;\n    if (columnCount > minCells) removeColumn.disabled = false;\n});\nremovedRow.addEventListener(\"click\", function() {\n    table.removeChild(table.lastElementChild);\n    if (table.children.length === minCells) removedRow.disabled = true;\n    if (table.children.length > minCells) appendRow.disabled = false;\n});\nremoveColumn.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var tr = _step.value;\n            tr.removeChild(tr.lastElementChild);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var columnCount = table.lastElementChild.children.length;\n    if (columnCount === minCells) removeColumn.disabled = true;\n    if (columnCount > minCells) appendColumn.disabled = false;\n});\n\n//# sourceMappingURL=index.1e794420.js.map\n","'use strict';\n\nconst maxCells = 10;\nconst minCells = 2;\n\nconst table = document.querySelector('tbody');\nconst appendRow = document.querySelector('.append-row');\nconst removedRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nappendRow.addEventListener('click', () => {\n  table.append(table.lastElementChild.cloneNode(true));\n\n  if (table.children.length === maxCells) {\n    appendRow.disabled = true;\n  }\n\n  if (table.children.length > minCells) {\n    removedRow.disabled = false;\n  }\n});\n\nappendColumn.addEventListener('click', () => {\n  for (const tr of table.children) {\n    tr.append(tr.lastElementChild.cloneNode(true));\n  }\n\n  const columnCount = table.lastElementChild.children.length;\n\n  if (columnCount === maxCells) {\n    appendColumn.disabled = true;\n  }\n\n  if (columnCount > minCells) {\n    removeColumn.disabled = false;\n  }\n});\n\nremovedRow.addEventListener('click', () => {\n  table.removeChild(table.lastElementChild);\n\n  if (table.children.length === minCells) {\n    removedRow.disabled = true;\n  }\n\n  if (table.children.length > minCells) {\n    appendRow.disabled = false;\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  for (const tr of table.children) {\n    tr.removeChild(tr.lastElementChild);\n  }\n\n  const columnCount = table.lastElementChild.children.length;\n\n  if (columnCount === minCells) {\n    removeColumn.disabled = true;\n  }\n\n  if (columnCount > minCells) {\n    appendColumn.disabled = false;\n  }\n});\n"],"names":["table","document","querySelector","appendRow","removedRow","appendColumn","removeColumn","addEventListener","append","lastElementChild","cloneNode","children","length","disabled","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","tr","value","err","return","columnCount","removeChild"],"version":3,"file":"index.1e794420.js.map"}